import java.util.ArrayList;

public class Period {

    static ArrayList<String> temp = new ArrayList<String>();
    static public int rest;
    public static int currentDivision;
    public static int currentResult = 0;
    public static ArrayList<String> afterPoint = new ArrayList<String>();

    public static ArrayList<String> divideAfterDot(int param, int param1) {
        int divider = param1;
        ArrayList<String> result = new ArrayList<String>();
        int fromInt = Integer.valueOf(String.valueOf(param) + "0");

        for (int i = 0; i < 15; i++) {
            if (rest > 0) {
                currentDivision = Integer.valueOf(String.valueOf(rest) + "0");
            } else
                currentDivision = fromInt;
            currentResult = currentDivision / divider;
            rest = currentDivision % divider;

            result.add(String.valueOf(currentResult));
            if (currentResult < 0) {
                currentDivision += Integer.valueOf("0");
            }
        }
        return result;
    }


    public static ArrayList<String> getSimilar(int rest, int division) {

        temp.addAll(divideAfterDot(rest, division));
        afterPoint.addAll(temp);
        Division.divisionFigureIndex = 0;
        String firstEntry = "";
        String secondEntry = "";
        ArrayList<String> betweenIndexes = new ArrayList<String>();
        boolean flag = true;
        for (int i = 0; i < afterPoint.size(); i++) {
            firstEntry = afterPoint.get(i);
            for (int j = i + 1; j < afterPoint.size(); j++) {
                secondEntry = afterPoint.get(j);
                for (int x = j + 1; x < afterPoint.size(); x++) {
                    if (afterPoint.get(x).equals(firstEntry) && afterPoint.get(x).equals(secondEntry)) {
                        betweenIndexes.add(String.valueOf(j));
                        betweenIndexes.add(String.valueOf(x));
                        flag = false;
                    }
                    if (!flag)
                        break;
                }
                if (!flag)
                    break;
            }
        }
        return betweenIndexes;
    }

    public String findPeriod(ArrayList<String> list) {
        String segment = "";
        if(list.size()>1) {
            for (int i = Integer.valueOf(list.get(0)); i < Integer.valueOf(list.get(1)); i++) {
                segment += afterPoint.get(i);
            }

            int count = 0;
            for (int i = 0; i < segment.length(); i++) {
                for (int j = 0; j < afterPoint.size(); j++) {
                    if (String.valueOf(segment.charAt(i)).equals(afterPoint.get(j)))
                        count++;
                }
            }
            if (list.get(0).equals(list.get(1)))
                return list.get(0);
            else if (count >= segment.length() * 2)
                return segment;
        }
        return "0";
    }


}
